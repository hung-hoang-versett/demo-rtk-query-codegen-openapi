{
  "openapi": "3.0.1",
  "info": {
    "title": "Submittable Beta API Documentation",
    "description": "\nThis page contains the documentation on how to use Submittable through API calls.\n\n#### Upcoming Release Notes\nTBA\n\n#### Beta Warning\nBeta is subject to major changes including but not limited to; Authentication, data-contracts, and routes.\nWe will communicate any breaking changes in advance. After the official release of any API version Submittable is\ncommitted to long term support for our users.\nWord to the wise - anticipate breaking changes during beta.\n\n### Authentication\n\nTo access the API, you must present an API Key provisioned for your organization.\n\nThe API Key is sent using a basic authentication header. Please ensure that the\nvalue is formatted as `:{apiKey}`.\n\n```\nAuthorization: Basic {apiKey}\n```\n\n### Request Content Type\n\nAll endpoints, unless otherwise noted, accept and produce `application/json`.\nPlease ensure the `Content-Type` header for POST and PUT requests are set correctly.\n",
    "version": "v3",
    "x-logo": {
      "url": "https://d370dzetq30w6k.cloudfront.net/76c8a9e173f3b7f984b3ff6195d24aac.svg",
      "altText": "Submittable Beta API Documentation"
    }
  },
  "servers": [
    {
      "url": "https://submittable-api.submittable.com"
    }
  ],
  "paths": {
    "/v3/requests": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Create a form request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateAdditionalFormRequestRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateReviewFormRequestRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateInternalFormRequestRequest"
                  }
                ],
                "nullable": true,
                "discriminator": {
                  "propertyName": "formType",
                  "mapping": {
                    "review": "#/components/schemas/CreateReviewFormRequestRequest",
                    "internal": "#/components/schemas/CreateInternalFormRequestRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created form request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InternalFormRequestResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormRequestResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormRequestResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "internal": "#/components/schemas/InternalFormRequestResponse",
                      "additional": "#/components/schemas/AdditionalFormRequestResponse",
                      "review": "#/components/schemas/ReviewFormRequestResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/requests/additional": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Send an additional form",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdditionalFormRequestRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created additional form request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalFormRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/responses": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Create a response",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateInternalFormResponseRequest"
                  }
                ],
                "nullable": true,
                "discriminator": {
                  "propertyName": "formType",
                  "mapping": {
                    "internal": "#/components/schemas/CreateInternalFormResponseRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/EligibilityFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InternalFormResponseResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "initial": "#/components/schemas/InitialFormResponseResponse",
                      "additional": "#/components/schemas/AdditionalFormResponseResponse",
                      "reference": "#/components/schemas/ReferenceFormResponseResponse",
                      "review": "#/components/schemas/ReviewFormResponseResponse",
                      "eligibility": "#/components/schemas/EligibilityFormResponseResponse",
                      "internal": "#/components/schemas/InternalFormResponseResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/responses/{formResponseId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a response",
        "parameters": [
          {
            "name": "formResponseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/EligibilityFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InternalFormResponseResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "initial": "#/components/schemas/InitialFormResponseResponse",
                      "additional": "#/components/schemas/AdditionalFormResponseResponse",
                      "reference": "#/components/schemas/ReferenceFormResponseResponse",
                      "review": "#/components/schemas/ReviewFormResponseResponse",
                      "eligibility": "#/components/schemas/EligibilityFormResponseResponse",
                      "internal": "#/components/schemas/InternalFormResponseResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "Update a response",
        "parameters": [
          {
            "name": "formResponseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInternalFormResponseRequest"
                  }
                ],
                "nullable": true,
                "discriminator": {
                  "propertyName": "formType",
                  "mapping": {
                    "internal": "#/components/schemas/UpdateInternalFormResponseRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/EligibilityFormResponseResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InternalFormResponseResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "initial": "#/components/schemas/InitialFormResponseResponse",
                      "additional": "#/components/schemas/AdditionalFormResponseResponse",
                      "reference": "#/components/schemas/ReferenceFormResponseResponse",
                      "review": "#/components/schemas/ReviewFormResponseResponse",
                      "eligibility": "#/components/schemas/EligibilityFormResponseResponse",
                      "internal": "#/components/schemas/InternalFormResponseResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete a response",
        "parameters": [
          {
            "name": "formResponseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/v3/responses/{formResponseId}/tables/{tableId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a url to download the table",
        "parameters": [
          {
            "name": "formResponseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/responses/{formResponseId}/files/{fileId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a url to download the uploaded file",
        "parameters": [
          {
            "name": "formResponseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/responses/forms/{formId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a page of form responses",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a page of form responses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<FormResponseResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/forms/{formId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          },
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/EligibilityFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InternalFormResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "initial": "#/components/schemas/InitialFormResponse",
                      "additional": "#/components/schemas/AdditionalFormResponse",
                      "reference": "#/components/schemas/ReferenceFormResponse",
                      "review": "#/components/schemas/ReviewFormResponse",
                      "eligibility": "#/components/schemas/EligibilityFormResponse",
                      "internal": "#/components/schemas/InternalFormResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "Update a form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateInitialFormRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateAdditionalFormRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateReferenceFormRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateReviewFormRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateInternalFormRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateEligibilityFormRequest"
                  }
                ],
                "nullable": true,
                "discriminator": {
                  "propertyName": "formType",
                  "mapping": {
                    "initial": "#/components/schemas/UpdateInitialFormRequest",
                    "additional": "#/components/schemas/UpdateAdditionalFormRequest",
                    "reference": "#/components/schemas/UpdateReferenceFormRequest",
                    "review": "#/components/schemas/UpdateReviewFormRequest",
                    "internal": "#/components/schemas/UpdateInternalFormRequest",
                    "eligibility": "#/components/schemas/UpdateEligibilityFormRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          },
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/EligibilityFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InternalFormResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "initial": "#/components/schemas/InitialFormResponse",
                      "additional": "#/components/schemas/AdditionalFormResponse",
                      "reference": "#/components/schemas/ReferenceFormResponse",
                      "review": "#/components/schemas/ReviewFormResponse",
                      "eligibility": "#/components/schemas/EligibilityFormResponse",
                      "internal": "#/components/schemas/InternalFormResponse"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete a form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/v3/forms": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a list of forms",
        "description": "The projectId filter only returns initial and additional forms that have received a response.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "enum": [
                "additional",
                "initial",
                "reference",
                "review",
                "internal",
                "eligibility"
              ],
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<FormResponse>"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Create a form",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created form",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InitialFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AdditionalFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReferenceFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ReviewFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/EligibilityFormResponse"
                    },
                    {
                      "$ref": "#/components/schemas/InternalFormResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "formType",
                    "mapping": {
                      "initial": "#/components/schemas/InitialFormResponse",
                      "additional": "#/components/schemas/AdditionalFormResponse",
                      "reference": "#/components/schemas/ReferenceFormResponse",
                      "review": "#/components/schemas/ReviewFormResponse",
                      "eligibility": "#/components/schemas/EligibilityFormResponse",
                      "internal": "#/components/schemas/InternalFormResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/reviews": {
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "Update a review score",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewScoreRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reviews/{reviewResponseId}": {
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete a review by id",
        "parameters": [
          {
            "name": "reviewResponseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Successfully deleted review"
          }
        }
      }
    },
    "/v3/funds": {
      "post": {
        "tags": [
          "Funds"
        ],
        "summary": "Create a fund",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFundRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new fund",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      },
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Get a page of funds",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of funds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<FundResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/funds/{fundId}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Get a fund",
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The fund",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          }
        }
      },
      "put": {
        "tags": [
          "Funds"
        ],
        "summary": "Update a fund",
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The fund",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Funds"
        ],
        "summary": "Delete a fund",
        "parameters": [
          {
            "name": "fundId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fund deleted."
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/transactions": {
      "post": {
        "tags": [
          "Funds"
        ],
        "summary": "Create a transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateAwardedTransactionRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreatePaidTransactionRequest"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      },
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Get a page of transactions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "fundId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "enum": [
                "awarded",
                "paid",
                "processing"
              ],
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "submitterId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "submissionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Funds"
        ],
        "summary": "Get a transaction by id",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "200": {
            "description": "Found transaction by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Funds"
        ],
        "summary": "Update a transaction by id",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "200": {
            "description": "Successfully updated transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Funds"
        ],
        "summary": "Delete a transaction by id",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Successfully deleted transaction"
          }
        }
      }
    },
    "/v3/transactions/{transactionId}/send": {
      "post": {
        "tags": [
          "Funds"
        ],
        "summary": "Send funds",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFundsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The new processing transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get a page of labels",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of labels",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<LabelResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create a label",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new label",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/labels/list": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Get a list of labels",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetLabelsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of labels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LabelResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/labels/{labelId}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get a label",
        "parameters": [
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The label",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          }
        }
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Update a label",
        "parameters": [
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLabelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The label",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete a label",
        "parameters": [
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Label deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/organizations/team/assignments": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get a list of team members and their assignment counts",
        "responses": {
          "200": {
            "description": "List of team members and their assignment counts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberAssignmentResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/organizations/team/list": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get a list of team members",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTeamMembersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of team members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/organizations/team/invites": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get list of team invites",
        "responses": {
          "200": {
            "description": "List of team invites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamInviteResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a page of projects",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<ProjectResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Entity not found"
          }
        }
      }
    },
    "/v3/projects/stages/{reviewStageId}": {
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update a review stage",
        "parameters": [
          {
            "name": "reviewStageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewStageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated review stage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewStageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      },
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a review stage",
        "parameters": [
          {
            "name": "reviewStageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewStageResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete a review stage",
        "parameters": [
          {
            "name": "reviewStageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Deleted review stage"
          }
        }
      }
    },
    "/v3/projects/{projectId}/stages": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a review stage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateCustomReviewStageRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateNoReviewStageRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateYesNoMaybeStageRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateAutomatedReviewStageRequest"
                  }
                ],
                "nullable": true,
                "discriminator": {
                  "propertyName": "reviewStageType",
                  "mapping": {
                    "custom_review": "#/components/schemas/CreateCustomReviewStageRequest",
                    "no_review": "#/components/schemas/CreateNoReviewStageRequest",
                    "yes_no_maybe": "#/components/schemas/CreateYesNoMaybeStageRequest",
                    "automated_review": "#/components/schemas/CreateAutomatedReviewStageRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewStageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/submissions": {
      "post": {
        "tags": [
          "Submissions"
        ],
        "summary": "Import a submission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateSubmissionBySubmitterIdRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateSubmissionByEmailRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateSubmissionByNameRequest"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Submissions"
        ],
        "summary": "List submissions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Projects.Include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "Projects.Exclude",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "LegacyProjects.Include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "LegacyProjects.Exclude",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Statuses.Include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "new",
                  "in_progress",
                  "accepted",
                  "declined",
                  "withdrawn",
                  "completed",
                  "editable",
                  "viewed",
                  "received",
                  "published"
                ],
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Statuses.Exclude",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "new",
                  "in_progress",
                  "accepted",
                  "declined",
                  "withdrawn",
                  "completed",
                  "editable",
                  "viewed",
                  "received",
                  "published"
                ],
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Reviewers",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "ArchivedStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ArchivedStatus"
            }
          },
          {
            "name": "Labels.IncludeAny",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Labels.IncludeAll",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Labels.IncludeUnlabeled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "Labels.ExcludeAny",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Labels.ExcludeAll",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Labels.ExcludeUnlabeled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "AdditionalFormStatuses",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdditionalFormsStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "ReviewStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ReviewStatus"
            }
          },
          {
            "name": "ReviewStages.Include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "ReviewStages.Exclude",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "SortBy.Field",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SubmissionSortField"
            }
          },
          {
            "name": "SortBy.Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SubmissionSortOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a page of submissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<SubmissionListResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/submissions/{submissionId}": {
      "get": {
        "tags": [
          "Submissions"
        ],
        "summary": "Get a submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Submissions"
        ],
        "summary": "Delete a submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Deleted"
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/stage/{stageId}": {
      "put": {
        "tags": [
          "Submissions"
        ],
        "summary": "Move submission between review stages",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "stageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Move submission between review stages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<SubmissionResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/submissions/history": {
      "get": {
        "tags": [
          "Submissions"
        ],
        "summary": "Get a page of submission history items",
        "parameters": [
          {
            "name": "submissionId",
            "in": "query",
            "schema": {
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "nullable": true
            }
          },
          {
            "name": "historyTypeId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "bulkActionTaskId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of submission history items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse<SubmissionHistoryResponse>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/v3/submissions/assignments/list": {
      "post": {
        "tags": [
          "Submissions"
        ],
        "summary": "Get submission assignments organized by userId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionIdsBaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSubmissionAssignmentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/reviews": {
      "get": {
        "tags": [
          "Submissions"
        ],
        "summary": "Get reviews for a Submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "reviewStageId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of reviews for a submission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewResponseResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/labels/{labelId}": {
      "put": {
        "tags": [
          "Submissions"
        ],
        "summary": "Apply a label to a submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Label applied to submission"
          }
        }
      },
      "delete": {
        "tags": [
          "Submissions"
        ],
        "summary": "Remove a label from a submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "labelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Label removed from submission"
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/status": {
      "put": {
        "tags": [
          "Submissions"
        ],
        "summary": "Update status of a submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdateSubmissionStatusAcceptedRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateSubmissionStatusInProgressRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateSubmissionStatusDeclinedRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateSubmissionStatusWithdrawnRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateSubmissionStatusCompletedRequest"
                  }
                ],
                "nullable": true,
                "discriminator": {
                  "propertyName": "status",
                  "mapping": {
                    "accepted": "#/components/schemas/UpdateSubmissionStatusAcceptedRequest",
                    "in_progress": "#/components/schemas/UpdateSubmissionStatusInProgressRequest",
                    "declined": "#/components/schemas/UpdateSubmissionStatusDeclinedRequest",
                    "withdrawn": "#/components/schemas/UpdateSubmissionStatusWithdrawnRequest",
                    "completed": "#/components/schemas/UpdateSubmissionStatusCompletedRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Submission status updated"
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/archive": {
      "put": {
        "tags": [
          "Submissions"
        ],
        "summary": "Archive submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Submission archived"
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/unarchive": {
      "put": {
        "tags": [
          "Submissions"
        ],
        "summary": "Unarchive submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Submission unarchived"
          }
        }
      }
    },
    "/v3/submissions/{submissionId}/notes": {
      "post": {
        "tags": [
          "Submissions"
        ],
        "summary": "Add a note to a submission",
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNoteToSubmissionRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "204": {
            "description": "Note added to submission"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PublicMessageRequest": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAdditionalFormRequestRequest": {
        "required": [
          "additionalFormId",
          "submissionId"
        ],
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "additionalFormId": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "$ref": "#/components/schemas/PublicMessageRequest"
          }
        },
        "additionalProperties": false
      },
      "CreateInternalFormRequestRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateFormRequestRequest"
          }
        ],
        "additionalProperties": false
      },
      "CreateFormRequestRequest": {
        "required": [
          "formType",
          "submissionId"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string"
          },
          "submissionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateReviewFormRequestRequest": {
        "required": [
          "reviewerId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateFormRequestRequest"
          }
        ],
        "properties": {
          "reviewerId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AdditionalFormRequestResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormRequestResponse"
          }
        ],
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "additionalFormRequestId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReviewFormRequestResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormRequestResponse"
          }
        ],
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FormRequestResponse": {
        "required": [
          "formType"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "requestId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isRescinded": {
            "type": "boolean"
          },
          "rescindedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InternalFormRequestResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormRequestResponse"
          }
        ],
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "internalFormRequestId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "General error messages from server.",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldError"
            },
            "description": "Validation errors for request fields.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NameFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ShortAnswerFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LongAnswerFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SingleCheckboxFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultipleResponseFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SingleResponseFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiFieldDataFileUploadValueFileMetadata": {
        "type": "object",
        "properties": {
          "formMetadataId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiFieldDataFileUploadValueFileResponse": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiFieldDataFileUploadValueFileMetadata"
            },
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "getDownloadUrl": {
            "type": "string",
            "nullable": true
          },
          "getThumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "getConversionUrl": {
            "type": "string",
            "nullable": true
          },
          "bucket": {
            "type": "string",
            "nullable": true
          },
          "storageKey": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnailInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "convertedBucketName": {
            "type": "string",
            "nullable": true
          },
          "convertedStorageKey": {
            "type": "string",
            "nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FileUploadFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiFieldDataFileUploadValueFileResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TableCell": {
        "type": "object",
        "properties": {
          "r": {
            "type": "integer",
            "format": "int32"
          },
          "c": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldDataTableValueResponse": {
        "type": "object",
        "properties": {
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableCell"
            },
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "getDownloadUrl": {
            "type": "string",
            "nullable": true
          },
          "getConversionUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TableFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "table": {
            "$ref": "#/components/schemas/FieldDataTableValueResponse"
          }
        },
        "additionalProperties": false
      },
      "NumberFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebsiteFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CoverLetterFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TextOnlyFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "additionalProperties": false
      },
      "ReferenceFormFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "refereeEmail": {
            "type": "string",
            "nullable": true
          },
          "personalMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DividerFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "additionalProperties": false
      },
      "SingleRatingFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultipleRatingFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DropdownRatingFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          "continue",
          "switchingProtocols",
          "processing",
          "earlyHints",
          "ok",
          "created",
          "accepted",
          "nonAuthoritativeInformation",
          "noContent",
          "resetContent",
          "partialContent",
          "multiStatus",
          "alreadyReported",
          "imUsed",
          "multipleChoices",
          "ambiguous",
          "movedPermanently",
          "moved",
          "found",
          "redirect",
          "seeOther",
          "redirectMethod",
          "notModified",
          "useProxy",
          "unused",
          "temporaryRedirect",
          "redirectKeepVerb",
          "permanentRedirect",
          "badRequest",
          "unauthorized",
          "paymentRequired",
          "forbidden",
          "notFound",
          "methodNotAllowed",
          "notAcceptable",
          "proxyAuthenticationRequired",
          "requestTimeout",
          "conflict",
          "gone",
          "lengthRequired",
          "preconditionFailed",
          "requestEntityTooLarge",
          "requestUriTooLong",
          "unsupportedMediaType",
          "requestedRangeNotSatisfiable",
          "expectationFailed",
          "misdirectedRequest",
          "unprocessableEntity",
          "locked",
          "failedDependency",
          "upgradeRequired",
          "preconditionRequired",
          "tooManyRequests",
          "requestHeaderFieldsTooLarge",
          "unavailableForLegalReasons",
          "internalServerError",
          "notImplemented",
          "badGateway",
          "serviceUnavailable",
          "gatewayTimeout",
          "httpVersionNotSupported",
          "variantAlsoNegotiates",
          "insufficientStorage",
          "loopDetected",
          "notExtended",
          "networkAuthenticationRequired"
        ],
        "type": "string"
      },
      "CharityCheckFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "ein": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "ofacStatus": {
            "type": "string",
            "nullable": true
          },
          "pub78Verified": {
            "type": "boolean",
            "nullable": true
          },
          "irsBmfPub78Conflict": {
            "type": "boolean",
            "nullable": true
          },
          "mostRecentPub78": {
            "type": "string",
            "nullable": true
          },
          "mostRecentIrb": {
            "type": "string",
            "nullable": true
          },
          "subsectionDescription": {
            "type": "string",
            "nullable": true
          },
          "deductibilityStatus": {
            "type": "string",
            "nullable": true
          },
          "foundation509AStatus": {
            "type": "string",
            "nullable": true
          },
          "mostRecentBmf": {
            "type": "string",
            "nullable": true
          },
          "rulingYear": {
            "type": "string",
            "nullable": true
          },
          "rulingMonth": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EligibilityCharityCheckFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "ein": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "ofacStatus": {
            "type": "string",
            "nullable": true
          },
          "pub78Verified": {
            "type": "boolean",
            "nullable": true
          },
          "irsBmfPub78Conflict": {
            "type": "boolean",
            "nullable": true
          },
          "mostRecentPub78": {
            "type": "string",
            "nullable": true
          },
          "mostRecentIrb": {
            "type": "string",
            "nullable": true
          },
          "subsectionDescription": {
            "type": "string",
            "nullable": true
          },
          "deductibilityStatus": {
            "type": "string",
            "nullable": true
          },
          "foundation509AStatus": {
            "type": "string",
            "nullable": true
          },
          "mostRecentBmf": {
            "type": "string",
            "nullable": true
          },
          "rulingYear": {
            "type": "string",
            "nullable": true
          },
          "rulingMonth": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EligibilitySingleCheckboxFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EligibilitySingleResponseFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EligibilityDropdownListFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankDetailsFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldResponseResponse": {
        "required": [
          "fieldType",
          "formFieldId"
        ],
        "type": "object",
        "properties": {
          "fieldType": {
            "type": "string"
          },
          "formFieldId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TitleFieldResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldResponseResponse"
          }
        ],
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFormResponseRequest": {
        "required": [
          "formType",
          "requestId"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "fieldData": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TitleFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NameFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/AddressFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ShortAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/LongAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/FileUploadFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TableFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NumberFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DateFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EmailFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/WebsiteFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/PhoneFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CoverLetterFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TextOnlyFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DividerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DropdownRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityDropdownListFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              ],
              "discriminator": {
                "propertyName": "fieldType",
                "mapping": {
                  "TITLE": "#/components/schemas/TitleFieldResponseResponse",
                  "NAME": "#/components/schemas/NameFieldResponseResponse",
                  "ADDRESS": "#/components/schemas/AddressFieldResponseResponse",
                  "SHORT_ANSWER": "#/components/schemas/ShortAnswerFieldResponseResponse",
                  "LONG_ANSWER": "#/components/schemas/LongAnswerFieldResponseResponse",
                  "SINGLE_CHECKBOX": "#/components/schemas/SingleCheckboxFieldResponseResponse",
                  "MULTIPLE_RESPONSE": "#/components/schemas/MultipleResponseFieldResponseResponse",
                  "SINGLE_RESPONSE": "#/components/schemas/SingleResponseFieldResponseResponse",
                  "FILE_UPLOAD": "#/components/schemas/FileUploadFieldResponseResponse",
                  "TABLE": "#/components/schemas/TableFieldResponseResponse",
                  "NUMBER": "#/components/schemas/NumberFieldResponseResponse",
                  "DATE": "#/components/schemas/DateFieldResponseResponse",
                  "EMAIL": "#/components/schemas/EmailFieldResponseResponse",
                  "WEBSITE": "#/components/schemas/WebsiteFieldResponseResponse",
                  "PHONE": "#/components/schemas/PhoneFieldResponseResponse",
                  "COVER_LETTER": "#/components/schemas/CoverLetterFieldResponseResponse",
                  "TEXT_ONLY": "#/components/schemas/TextOnlyFieldResponseResponse",
                  "REFERENCE_FORM": "#/components/schemas/ReferenceFormFieldResponseResponse",
                  "DIVIDER": "#/components/schemas/DividerFieldResponseResponse",
                  "SINGLE_RATING": "#/components/schemas/SingleRatingFieldResponseResponse",
                  "MULTIPLE_RATING": "#/components/schemas/MultipleRatingFieldResponseResponse",
                  "DROPDOWN_RATING": "#/components/schemas/DropdownRatingFieldResponseResponse",
                  "CHARITY_CHECK": "#/components/schemas/CharityCheckFieldResponseResponse",
                  "ELIGIBILITY_CHARITY_CHECK": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_CHECKBOX": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_RESPONSE": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse",
                  "ELIGIBILITY_DROPDOWN_LIST": "#/components/schemas/EligibilityDropdownListFieldResponseResponse",
                  "BANK_DETAILS": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInternalFormResponseRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateFormResponseRequest"
          }
        ],
        "additionalProperties": false
      },
      "PaymentInfo": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isSubmissionFee": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentInfoGrouping": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentLine": {
        "type": "object",
        "properties": {
          "isGrouping": {
            "type": "boolean"
          },
          "grouping": {
            "$ref": "#/components/schemas/PaymentInfoGrouping"
          },
          "item": {
            "$ref": "#/components/schemas/PaymentInfo"
          }
        },
        "additionalProperties": false
      },
      "PaymentReceipt": {
        "type": "object",
        "properties": {
          "paymentLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentLine"
            },
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AdditionalFormResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponseResponse"
          }
        ],
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "submissionFormId": {
            "type": "string"
          },
          "paymentReceipt": {
            "$ref": "#/components/schemas/PaymentReceipt"
          }
        },
        "additionalProperties": false
      },
      "ReferenceFormResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponseResponse"
          }
        ],
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "sendCount": {
            "type": "integer",
            "format": "int32"
          },
          "refereeEmail": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReviewFormResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponseResponse"
          }
        ],
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "stageId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EligibilityFormResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponseResponse"
          }
        ],
        "additionalProperties": false
      },
      "InternalFormResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponseResponse"
          }
        ],
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "FormResponseResponse": {
        "required": [
          "formType"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string"
          },
          "formResponseId": {
            "type": "string",
            "format": "uuid"
          },
          "formId": {
            "type": "string",
            "format": "uuid"
          },
          "fieldData": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TitleFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NameFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/AddressFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ShortAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/LongAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/FileUploadFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TableFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NumberFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DateFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EmailFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/WebsiteFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/PhoneFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CoverLetterFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TextOnlyFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DividerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DropdownRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityDropdownListFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              ],
              "discriminator": {
                "propertyName": "fieldType",
                "mapping": {
                  "TITLE": "#/components/schemas/TitleFieldResponseResponse",
                  "NAME": "#/components/schemas/NameFieldResponseResponse",
                  "ADDRESS": "#/components/schemas/AddressFieldResponseResponse",
                  "SHORT_ANSWER": "#/components/schemas/ShortAnswerFieldResponseResponse",
                  "LONG_ANSWER": "#/components/schemas/LongAnswerFieldResponseResponse",
                  "SINGLE_CHECKBOX": "#/components/schemas/SingleCheckboxFieldResponseResponse",
                  "MULTIPLE_RESPONSE": "#/components/schemas/MultipleResponseFieldResponseResponse",
                  "SINGLE_RESPONSE": "#/components/schemas/SingleResponseFieldResponseResponse",
                  "FILE_UPLOAD": "#/components/schemas/FileUploadFieldResponseResponse",
                  "TABLE": "#/components/schemas/TableFieldResponseResponse",
                  "NUMBER": "#/components/schemas/NumberFieldResponseResponse",
                  "DATE": "#/components/schemas/DateFieldResponseResponse",
                  "EMAIL": "#/components/schemas/EmailFieldResponseResponse",
                  "WEBSITE": "#/components/schemas/WebsiteFieldResponseResponse",
                  "PHONE": "#/components/schemas/PhoneFieldResponseResponse",
                  "COVER_LETTER": "#/components/schemas/CoverLetterFieldResponseResponse",
                  "TEXT_ONLY": "#/components/schemas/TextOnlyFieldResponseResponse",
                  "REFERENCE_FORM": "#/components/schemas/ReferenceFormFieldResponseResponse",
                  "DIVIDER": "#/components/schemas/DividerFieldResponseResponse",
                  "SINGLE_RATING": "#/components/schemas/SingleRatingFieldResponseResponse",
                  "MULTIPLE_RATING": "#/components/schemas/MultipleRatingFieldResponseResponse",
                  "DROPDOWN_RATING": "#/components/schemas/DropdownRatingFieldResponseResponse",
                  "CHARITY_CHECK": "#/components/schemas/CharityCheckFieldResponseResponse",
                  "ELIGIBILITY_CHARITY_CHECK": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_CHECKBOX": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_RESPONSE": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse",
                  "ELIGIBILITY_DROPDOWN_LIST": "#/components/schemas/EligibilityDropdownListFieldResponseResponse",
                  "BANK_DETAILS": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              }
            }
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InitialFormResponseResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponseResponse"
          }
        ],
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentReceipt": {
            "$ref": "#/components/schemas/PaymentReceipt"
          }
        },
        "additionalProperties": false
      },
      "UpdateFormResponseRequest": {
        "required": [
          "fieldData",
          "formType"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string"
          },
          "fieldData": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TitleFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NameFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/AddressFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ShortAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/LongAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/FileUploadFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TableFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NumberFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DateFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EmailFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/WebsiteFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/PhoneFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CoverLetterFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TextOnlyFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DividerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DropdownRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityDropdownListFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              ],
              "discriminator": {
                "propertyName": "fieldType",
                "mapping": {
                  "TITLE": "#/components/schemas/TitleFieldResponseResponse",
                  "NAME": "#/components/schemas/NameFieldResponseResponse",
                  "ADDRESS": "#/components/schemas/AddressFieldResponseResponse",
                  "SHORT_ANSWER": "#/components/schemas/ShortAnswerFieldResponseResponse",
                  "LONG_ANSWER": "#/components/schemas/LongAnswerFieldResponseResponse",
                  "SINGLE_CHECKBOX": "#/components/schemas/SingleCheckboxFieldResponseResponse",
                  "MULTIPLE_RESPONSE": "#/components/schemas/MultipleResponseFieldResponseResponse",
                  "SINGLE_RESPONSE": "#/components/schemas/SingleResponseFieldResponseResponse",
                  "FILE_UPLOAD": "#/components/schemas/FileUploadFieldResponseResponse",
                  "TABLE": "#/components/schemas/TableFieldResponseResponse",
                  "NUMBER": "#/components/schemas/NumberFieldResponseResponse",
                  "DATE": "#/components/schemas/DateFieldResponseResponse",
                  "EMAIL": "#/components/schemas/EmailFieldResponseResponse",
                  "WEBSITE": "#/components/schemas/WebsiteFieldResponseResponse",
                  "PHONE": "#/components/schemas/PhoneFieldResponseResponse",
                  "COVER_LETTER": "#/components/schemas/CoverLetterFieldResponseResponse",
                  "TEXT_ONLY": "#/components/schemas/TextOnlyFieldResponseResponse",
                  "REFERENCE_FORM": "#/components/schemas/ReferenceFormFieldResponseResponse",
                  "DIVIDER": "#/components/schemas/DividerFieldResponseResponse",
                  "SINGLE_RATING": "#/components/schemas/SingleRatingFieldResponseResponse",
                  "MULTIPLE_RATING": "#/components/schemas/MultipleRatingFieldResponseResponse",
                  "DROPDOWN_RATING": "#/components/schemas/DropdownRatingFieldResponseResponse",
                  "CHARITY_CHECK": "#/components/schemas/CharityCheckFieldResponseResponse",
                  "ELIGIBILITY_CHARITY_CHECK": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_CHECKBOX": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_RESPONSE": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse",
                  "ELIGIBILITY_DROPDOWN_LIST": "#/components/schemas/EligibilityDropdownListFieldResponseResponse",
                  "BANK_DETAILS": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              }
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalFormResponseRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormResponseRequest"
          }
        ],
        "additionalProperties": false
      },
      "GetUrlResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PageResponse<FormResponseResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InitialFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/AdditionalFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReviewFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/InternalFormResponseResponse"
                }
              ],
              "discriminator": {
                "propertyName": "formType",
                "mapping": {
                  "initial": "#/components/schemas/InitialFormResponseResponse",
                  "additional": "#/components/schemas/AdditionalFormResponseResponse",
                  "reference": "#/components/schemas/ReferenceFormResponseResponse",
                  "review": "#/components/schemas/ReviewFormResponseResponse",
                  "eligibility": "#/components/schemas/EligibilityFormResponseResponse",
                  "internal": "#/components/schemas/InternalFormResponseResponse"
                }
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalFormResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponse"
          }
        ],
        "properties": {
          "price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "paymentDescription": {
            "type": "string",
            "readOnly": true
          },
          "enablePayment": {
            "type": "boolean",
            "readOnly": true
          },
          "currencyCode": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReferenceFormResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponse"
          }
        ],
        "additionalProperties": false
      },
      "ReviewFormResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponse"
          }
        ],
        "additionalProperties": false
      },
      "EligibilityFormResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponse"
          }
        ],
        "additionalProperties": false
      },
      "InternalFormResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponse"
          }
        ],
        "additionalProperties": false
      },
      "ApiOptionResponse": {
        "type": "object",
        "properties": {
          "formOptionId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isEligible": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiMetadataResponse": {
        "type": "object",
        "properties": {
          "formMetadataId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiFieldResponse": {
        "type": "object",
        "properties": {
          "formFieldId": {
            "type": "string",
            "nullable": true
          },
          "fieldType": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "minValue": {
            "type": "string",
            "nullable": true
          },
          "maxValue": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "defaultCountry": {
            "type": "string",
            "nullable": true
          },
          "requireValidUSAddress": {
            "type": "boolean"
          },
          "referenceFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "orgMessage": {
            "type": "string",
            "nullable": true
          },
          "showOrgMessage": {
            "type": "boolean"
          },
          "countLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countType": {
            "type": "string",
            "nullable": true
          },
          "allowRichTextEditing": {
            "type": "boolean"
          },
          "additionalInstructions": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "isEditable": {
            "type": "boolean",
            "nullable": true
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "isBlind": {
            "type": "boolean"
          },
          "inline": {
            "type": "boolean"
          },
          "enableBranching": {
            "type": "boolean"
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiOptionResponse"
            },
            "nullable": true
          },
          "fileTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fileLimit": {
            "type": "integer",
            "format": "int32"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiMetadataResponse"
            },
            "nullable": true
          },
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "tableIsReadonly": {
            "type": "boolean"
          },
          "tableFileName": {
            "type": "string",
            "nullable": true
          },
          "textBlock": {
            "type": "string",
            "nullable": true
          },
          "computeTableUrl": {
            "type": "string",
            "nullable": true
          },
          "duplicateTableTemplateUrl": {
            "type": "string",
            "nullable": true
          },
          "createFileUrl": {
            "type": "string",
            "nullable": true
          },
          "createLargeFileUrl": {
            "type": "string",
            "nullable": true
          },
          "shareFeedback": {
            "type": "boolean"
          },
          "eligibleSubsections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isEligibleValue": {
            "type": "boolean"
          },
          "specialValidation": {
            "type": "integer",
            "format": "int32"
          },
          "hasRoutingNumber": {
            "type": "boolean"
          },
          "hasAccountNumber": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApiBranchResponse": {
        "type": "object",
        "properties": {
          "formBranchId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormResponse": {
        "required": [
          "formType"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string",
            "readOnly": true
          },
          "formId": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiFieldResponse"
            }
          },
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiBranchResponse"
            }
          },
          "createdBy": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InitialFormResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FormResponse"
          }
        ],
        "properties": {
          "price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "paymentDescription": {
            "type": "string",
            "readOnly": true
          },
          "enablePayment": {
            "type": "boolean",
            "readOnly": true
          },
          "currencyCode": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAdditionalFormRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormRequest"
          }
        ],
        "properties": {
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentDescription": {
            "type": "string",
            "nullable": true
          },
          "enablePayment": {
            "type": "boolean"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReferenceFormRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateReviewFormRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateInternalFormRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateEligibilityFormRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormRequest"
          }
        ],
        "additionalProperties": false
      },
      "NameFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "countLimit": {
            "type": "integer",
            "format": "int32"
          },
          "countType": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AddressFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "requireValidUSAddress": {
            "type": "boolean"
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ShortAnswerFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "countLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countType": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LongAnswerFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "countLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countType": {
            "type": "string",
            "nullable": true
          },
          "allowRichTextEditing": {
            "type": "boolean"
          },
          "specialValidation": {
            "type": "integer",
            "format": "int32"
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SingleCheckboxFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OptionRequest": {
        "required": [
          "label"
        ],
        "type": "object",
        "properties": {
          "optionId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string"
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isEligible": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MultipleResponseFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "inline": {
            "type": "boolean"
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SingleResponseFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "inline": {
            "type": "boolean"
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MetadataRequest": {
        "required": [
          "label"
        ],
        "type": "object",
        "properties": {
          "metadataId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FileUploadFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "fileTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fileLimit": {
            "type": "integer",
            "format": "int32"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataRequest"
            },
            "nullable": true
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TableFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "tableId": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NumberFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "minValue": {
            "type": "string",
            "nullable": true
          },
          "maxValue": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DateFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "minValue": {
            "type": "string",
            "nullable": true
          },
          "maxValue": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EmailFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebsiteFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PhoneFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "defaultCountry": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CoverLetterFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "additionalProperties": false
      },
      "TextOnlyFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "textBlock": {
            "type": "string",
            "nullable": true
          },
          "specialValidation": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ReferenceFormFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "referenceFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "orgMessage": {
            "type": "string",
            "nullable": true
          },
          "showOrgMessage": {
            "type": "boolean"
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DividerFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "additionalProperties": false
      },
      "SingleRatingFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "inline": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MultipleRatingFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "inline": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DropdownRatingFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DropdownListFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "enablePayment": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CharityCheckFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EligibilityCharityCheckFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "eligibleSubsections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EligibilitySingleCheckboxFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "isEligibleValue": {
            "type": "boolean"
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EligibilitySingleResponseFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "eligibleSubsections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "inline": {
            "type": "boolean"
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EligibilityDropdownListFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionRequest"
            },
            "nullable": true
          },
          "eligibleSubsections": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enableBranching": {
            "type": "boolean"
          },
          "autoLabel": {
            "type": "boolean"
          },
          "isCustomAutoLabel": {
            "type": "boolean"
          },
          "customAutoLabel": {
            "type": "string",
            "nullable": true
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BankDetailsFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "hasRoutingNumber": {
            "type": "boolean"
          },
          "hasAccountNumber": {
            "type": "boolean"
          },
          "isConcealed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FieldRequest": {
        "required": [
          "fieldType"
        ],
        "type": "object",
        "properties": {
          "fieldType": {
            "type": "string"
          },
          "formFieldId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "additionalInstructions": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "branchId": {
            "type": "string",
            "nullable": true
          },
          "shareFeedback": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TitleFieldRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldRequest"
          }
        ],
        "properties": {
          "countLimit": {
            "type": "integer",
            "format": "int32"
          },
          "countType": {
            "type": "string",
            "nullable": true
          },
          "specialValidation": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BranchRequest": {
        "required": [
          "branchId",
          "color",
          "label"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateFormRequest": {
        "required": [
          "formType",
          "name"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TitleFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/NameFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/AddressFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/ShortAnswerFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/LongAnswerFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/SingleCheckboxFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/MultipleResponseFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/SingleResponseFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/FileUploadFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/TableFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/NumberFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/DateFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/EmailFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/WebsiteFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/PhoneFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CoverLetterFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/TextOnlyFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/DividerFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/SingleRatingFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/MultipleRatingFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/DropdownRatingFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/DropdownListFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CharityCheckFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/EligibilityCharityCheckFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleCheckboxFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleResponseFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/EligibilityDropdownListFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/BankDetailsFieldRequest"
                }
              ],
              "discriminator": {
                "propertyName": "fieldType",
                "mapping": {
                  "title": "#/components/schemas/TitleFieldRequest",
                  "name": "#/components/schemas/NameFieldRequest",
                  "address": "#/components/schemas/AddressFieldRequest",
                  "short_answer": "#/components/schemas/ShortAnswerFieldRequest",
                  "long_answer": "#/components/schemas/LongAnswerFieldRequest",
                  "single_checkbox": "#/components/schemas/SingleCheckboxFieldRequest",
                  "multiple_response": "#/components/schemas/MultipleResponseFieldRequest",
                  "single_response": "#/components/schemas/SingleResponseFieldRequest",
                  "file_upload": "#/components/schemas/FileUploadFieldRequest",
                  "table": "#/components/schemas/TableFieldRequest",
                  "number": "#/components/schemas/NumberFieldRequest",
                  "date": "#/components/schemas/DateFieldRequest",
                  "email": "#/components/schemas/EmailFieldRequest",
                  "website": "#/components/schemas/WebsiteFieldRequest",
                  "phone": "#/components/schemas/PhoneFieldRequest",
                  "cover_letter": "#/components/schemas/CoverLetterFieldRequest",
                  "text_only": "#/components/schemas/TextOnlyFieldRequest",
                  "reference_form": "#/components/schemas/ReferenceFormFieldRequest",
                  "divider": "#/components/schemas/DividerFieldRequest",
                  "single_rating": "#/components/schemas/SingleRatingFieldRequest",
                  "multiple_rating": "#/components/schemas/MultipleRatingFieldRequest",
                  "dropdown_rating": "#/components/schemas/DropdownRatingFieldRequest",
                  "dropdown_list": "#/components/schemas/DropdownListFieldRequest",
                  "charity_check": "#/components/schemas/CharityCheckFieldRequest",
                  "eligibility_charity_check": "#/components/schemas/EligibilityCharityCheckFieldRequest",
                  "eligibility_single_checkbox": "#/components/schemas/EligibilitySingleCheckboxFieldRequest",
                  "eligibility_single_response": "#/components/schemas/EligibilitySingleResponseFieldRequest",
                  "eligibility_dropdown_list": "#/components/schemas/EligibilityDropdownListFieldRequest",
                  "bank_details": "#/components/schemas/BankDetailsFieldRequest"
                }
              }
            },
            "nullable": true
          },
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInitialFormRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateFormRequest"
          }
        ],
        "properties": {
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentDescription": {
            "type": "string",
            "nullable": true
          },
          "enablePayment": {
            "type": "boolean"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageResponse<FormResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InitialFormResponse"
                },
                {
                  "$ref": "#/components/schemas/AdditionalFormResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormResponse"
                },
                {
                  "$ref": "#/components/schemas/ReviewFormResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityFormResponse"
                },
                {
                  "$ref": "#/components/schemas/InternalFormResponse"
                }
              ],
              "discriminator": {
                "propertyName": "formType",
                "mapping": {
                  "initial": "#/components/schemas/InitialFormResponse",
                  "additional": "#/components/schemas/AdditionalFormResponse",
                  "reference": "#/components/schemas/ReferenceFormResponse",
                  "review": "#/components/schemas/ReviewFormResponse",
                  "eligibility": "#/components/schemas/EligibilityFormResponse",
                  "internal": "#/components/schemas/InternalFormResponse"
                }
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFormRequest": {
        "required": [
          "formType"
        ],
        "type": "object",
        "properties": {
          "formType": {
            "enum": [
              "additional",
              "initial",
              "reference",
              "review",
              "internal",
              "eligibility"
            ],
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateReviewScoreRequest": {
        "required": [
          "reviewStageId",
          "score",
          "submissionId"
        ],
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "reviewStageId": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ReviewResponseResponse": {
        "type": "object",
        "properties": {
          "reviewResponseId": {
            "type": "string",
            "nullable": true
          },
          "submissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reviewStageId": {
            "type": "string",
            "nullable": true
          },
          "formResponseId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reviewerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean"
          },
          "isOpenForEditing": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateFundRequest": {
        "required": [
          "amount",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "amount": {
            "maximum": 9999999999.99,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FundResponse": {
        "type": "object",
        "properties": {
          "fundId": {
            "type": "string",
            "format": "uuid"
          },
          "fundName": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "awardedAmount": {
            "type": "number",
            "format": "double"
          },
          "paidAmount": {
            "type": "number",
            "format": "double"
          },
          "availableAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PageResponse<FundResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFundRequest": {
        "required": [
          "amount",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "amount": {
            "maximum": 9999999999.99,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaidTransactionRequest": {
        "required": [
          "awardTransactionId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateTransactionRequest"
          }
        ],
        "properties": {
          "awardTransactionId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateTransactionRequest": {
        "required": [
          "amount",
          "fundId",
          "transactionStatus"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "maximum": 9999999999.99,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "fundId": {
            "type": "string",
            "format": "uuid"
          },
          "transactionStatus": {
            "enum": [
              "awarded",
              "paid",
              "processing"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateAwardedTransactionRequest": {
        "required": [
          "submissionId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateTransactionRequest"
          }
        ],
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "fundId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "enum": [
              "awarded",
              "paid",
              "processing"
            ],
            "type": "string"
          },
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "awardTransactionId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTransactionRequest": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "maximum": 9999999999.99,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileRequest": {
        "required": [
          "fileId"
        ],
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateSubmissionMessageRequest": {
        "required": [
          "body",
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileRequest"
            },
            "nullable": true
          },
          "shouldIncludeRequestAgreement": {
            "type": "boolean"
          },
          "shouldUseOrganizationEmailAsFromAddress": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SendFundsRequest": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/CreateSubmissionMessageRequest"
          }
        },
        "additionalProperties": false
      },
      "LabelResponse": {
        "type": "object",
        "properties": {
          "labelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "backgroundColor": {
            "type": "string"
          },
          "foregroundColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageResponse<LabelResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLabelRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 25,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetLabelsRequest": {
        "required": [
          "labelIds"
        ],
        "type": "object",
        "properties": {
          "labelIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateLabelRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 25,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Name": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "full": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TeamMemberAssignmentResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "permissionLevel": {
            "enum": [
              "None",
              "Level1",
              "Level2",
              "Level3",
              "Level4",
              "Level5"
            ],
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "assignmentCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetTeamMembersRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamMemberResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "permissionLevel": {
            "enum": [
              "None",
              "Level1",
              "Level2",
              "Level3",
              "Level4",
              "Level5"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TeamInviteResponse": {
        "type": "object",
        "properties": {
          "teamInviteId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "inviteDate": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "permissionLevel": {
            "enum": [
              "None",
              "Level1",
              "Level2",
              "Level3",
              "Level4",
              "Level5"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReviewStageResponse": {
        "type": "object",
        "properties": {
          "reviewStageId": {
            "type": "string"
          },
          "stageName": {
            "type": "string"
          },
          "stageOrder": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "no_review",
              "yes_no_maybe",
              "custom_review",
              "automated_review"
            ],
            "type": "string"
          },
          "formId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reviewerUserIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProjectResponse": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "guidelinesHtml": {
            "type": "string",
            "nullable": true
          },
          "termsOfUse": {
            "type": "string",
            "nullable": true
          },
          "initialFormId": {
            "type": "string",
            "format": "uuid"
          },
          "internalFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "eligibilityFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startsAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endsAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "shouldHideBlindFields": {
            "type": "boolean"
          },
          "blindLevel": {
            "enum": [
              "None",
              "Level1",
              "Level2",
              "Level3",
              "Level4",
              "Level5"
            ],
            "type": "string",
            "nullable": true
          },
          "createdByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "reviewStages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewStageResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageResponse<ProjectResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProjectRequest": {
        "required": [
          "initialFormId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "type": "string"
          },
          "guidelinesHtml": {
            "type": "string",
            "nullable": true
          },
          "termsOfUse": {
            "type": "string",
            "nullable": true
          },
          "eligibilityFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "initialFormId": {
            "type": "string",
            "format": "uuid"
          },
          "internalFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "shouldHideBlindFields": {
            "type": "boolean"
          },
          "blindLevel": {
            "enum": [
              "None",
              "Level1",
              "Level2",
              "Level3",
              "Level4",
              "Level5"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjectRequest": {
        "required": [
          "initialFormId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "type": "string"
          },
          "guidelinesHtml": {
            "type": "string",
            "nullable": true
          },
          "termsOfUse": {
            "type": "string",
            "nullable": true
          },
          "eligibilityFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "initialFormId": {
            "type": "string",
            "format": "uuid"
          },
          "internalFormId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "startsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "shouldHideBlindFields": {
            "type": "boolean"
          },
          "blindLevel": {
            "enum": [
              "None",
              "Level1",
              "Level2",
              "Level3",
              "Level4",
              "Level5"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateReviewStageRequest": {
        "type": "object",
        "properties": {
          "stageName": {
            "type": "string",
            "nullable": true
          },
          "reviewerUserIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "nextStageOnCompletedReviews": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNoReviewStageRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateReviewStageRequest"
          }
        ],
        "additionalProperties": false
      },
      "CreateYesNoMaybeStageRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateReviewStageRequest"
          }
        ],
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "nextStageOnCompletedReviews": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAutomatedReviewStageRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateReviewStageRequest"
          }
        ],
        "properties": {
          "formId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateReviewStageRequest": {
        "required": [
          "reviewStageType",
          "stageName"
        ],
        "type": "object",
        "properties": {
          "reviewStageType": {
            "enum": [
              "no_review",
              "yes_no_maybe",
              "custom_review",
              "automated_review"
            ],
            "type": "string"
          },
          "stageName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateCustomReviewStageRequest": {
        "required": [
          "formId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateReviewStageRequest"
          }
        ],
        "properties": {
          "formId": {
            "type": "string",
            "format": "uuid"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "nextStageOnCompletedReviews": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubmissionByEmailRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateSubmissionRequest"
          }
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateSubmissionByNameRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateSubmissionRequest"
          }
        ],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateSubmissionRequest": {
        "required": [
          "fieldData",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "fieldData": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TitleFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NameFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/AddressFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ShortAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/LongAnswerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/FileUploadFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TableFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/NumberFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DateFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EmailFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/WebsiteFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/PhoneFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CoverLetterFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/TextOnlyFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DividerFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/SingleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/MultipleRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/DropdownRatingFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/CharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityDropdownListFieldResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              ],
              "discriminator": {
                "propertyName": "fieldType",
                "mapping": {
                  "TITLE": "#/components/schemas/TitleFieldResponseResponse",
                  "NAME": "#/components/schemas/NameFieldResponseResponse",
                  "ADDRESS": "#/components/schemas/AddressFieldResponseResponse",
                  "SHORT_ANSWER": "#/components/schemas/ShortAnswerFieldResponseResponse",
                  "LONG_ANSWER": "#/components/schemas/LongAnswerFieldResponseResponse",
                  "SINGLE_CHECKBOX": "#/components/schemas/SingleCheckboxFieldResponseResponse",
                  "MULTIPLE_RESPONSE": "#/components/schemas/MultipleResponseFieldResponseResponse",
                  "SINGLE_RESPONSE": "#/components/schemas/SingleResponseFieldResponseResponse",
                  "FILE_UPLOAD": "#/components/schemas/FileUploadFieldResponseResponse",
                  "TABLE": "#/components/schemas/TableFieldResponseResponse",
                  "NUMBER": "#/components/schemas/NumberFieldResponseResponse",
                  "DATE": "#/components/schemas/DateFieldResponseResponse",
                  "EMAIL": "#/components/schemas/EmailFieldResponseResponse",
                  "WEBSITE": "#/components/schemas/WebsiteFieldResponseResponse",
                  "PHONE": "#/components/schemas/PhoneFieldResponseResponse",
                  "COVER_LETTER": "#/components/schemas/CoverLetterFieldResponseResponse",
                  "TEXT_ONLY": "#/components/schemas/TextOnlyFieldResponseResponse",
                  "REFERENCE_FORM": "#/components/schemas/ReferenceFormFieldResponseResponse",
                  "DIVIDER": "#/components/schemas/DividerFieldResponseResponse",
                  "SINGLE_RATING": "#/components/schemas/SingleRatingFieldResponseResponse",
                  "MULTIPLE_RATING": "#/components/schemas/MultipleRatingFieldResponseResponse",
                  "DROPDOWN_RATING": "#/components/schemas/DropdownRatingFieldResponseResponse",
                  "CHARITY_CHECK": "#/components/schemas/CharityCheckFieldResponseResponse",
                  "ELIGIBILITY_CHARITY_CHECK": "#/components/schemas/EligibilityCharityCheckFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_CHECKBOX": "#/components/schemas/EligibilitySingleCheckboxFieldResponseResponse",
                  "ELIGIBILITY_SINGLE_RESPONSE": "#/components/schemas/EligibilitySingleResponseFieldResponseResponse",
                  "ELIGIBILITY_DROPDOWN_LIST": "#/components/schemas/EligibilityDropdownListFieldResponseResponse",
                  "BANK_DETAILS": "#/components/schemas/BankDetailsFieldResponseResponse"
                }
              }
            }
          }
        },
        "additionalProperties": false
      },
      "CreateSubmissionBySubmitterIdRequest": {
        "required": [
          "submitterId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateSubmissionRequest"
          }
        ],
        "properties": {
          "submitterId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SubmissionResponse": {
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "submitterId": {
            "type": "string",
            "format": "uuid"
          },
          "submitterFirstName": {
            "type": "string"
          },
          "submitterLastName": {
            "type": "string"
          },
          "submitterEmail": {
            "type": "string"
          },
          "submissionStatus": {
            "enum": [
              "new",
              "in_progress",
              "accepted",
              "declined",
              "withdrawn",
              "completed",
              "editable",
              "viewed",
              "received",
              "published"
            ],
            "type": "string"
          },
          "isArchivedBySubmitter": {
            "type": "boolean"
          },
          "isArchivedByOrganization": {
            "type": "boolean"
          },
          "isPaid": {
            "type": "boolean"
          },
          "formResponses": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InitialFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/AdditionalFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/ReviewFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/EligibilityFormResponseResponse"
                },
                {
                  "$ref": "#/components/schemas/InternalFormResponseResponse"
                }
              ],
              "discriminator": {
                "propertyName": "formType",
                "mapping": {
                  "initial": "#/components/schemas/InitialFormResponseResponse",
                  "additional": "#/components/schemas/AdditionalFormResponseResponse",
                  "reference": "#/components/schemas/ReferenceFormResponseResponse",
                  "review": "#/components/schemas/ReviewFormResponseResponse",
                  "eligibility": "#/components/schemas/EligibilityFormResponseResponse",
                  "internal": "#/components/schemas/InternalFormResponseResponse"
                }
              }
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelResponse"
            }
          },
          "reviewStageId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ArchivedStatus": {
        "enum": [
          "archived",
          "notArchived",
          "either"
        ],
        "type": "string"
      },
      "AdditionalFormsStatus": {
        "enum": [
          "anyCompleted",
          "allCompleted",
          "noneCompleted",
          "anyEditable",
          "any",
          "none"
        ],
        "type": "string"
      },
      "ReviewStatus": {
        "enum": [
          "pending",
          "completed",
          "pendingOrCompleted"
        ],
        "type": "string"
      },
      "SubmissionSortField": {
        "enum": [
          "submissionId",
          "submissionTitle",
          "submitterId",
          "date"
        ],
        "type": "string"
      },
      "SubmissionSortOrder": {
        "enum": [
          "ascending",
          "descending"
        ],
        "type": "string"
      },
      "SubmissionListResponse": {
        "type": "object",
        "properties": {
          "submissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "submitterId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reviewStageId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "submissionStatus": {
            "enum": [
              "new",
              "in_progress",
              "accepted",
              "declined",
              "withdrawn",
              "completed",
              "editable",
              "viewed",
              "received",
              "published"
            ],
            "type": "string",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "isPaid": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "reviewers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "submitterFirstName": {
            "type": "string",
            "nullable": true
          },
          "submitterLastName": {
            "type": "string",
            "nullable": true
          },
          "submitterEmail": {
            "type": "string",
            "nullable": true
          },
          "submissionTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageResponse<SubmissionListResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionListResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageResponse<SubmissionResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmissionHistoryResponse": {
        "type": "object",
        "properties": {
          "historyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "submissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "replaceData": {
            "type": "string",
            "nullable": true
          },
          "submissionName": {
            "type": "string",
            "nullable": true
          },
          "emailRecipients": {
            "type": "string",
            "nullable": true
          },
          "activityUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bulkActionTaskId": {
            "type": "string",
            "format": "uuid"
          },
          "activityUserFirstName": {
            "type": "string",
            "nullable": true
          },
          "activityUserLastName": {
            "type": "string",
            "nullable": true
          },
          "submitterName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PageResponse<SubmissionHistoryResponse>": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionHistoryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmissionIdsBaseRequest": {
        "required": [
          "submissionIds"
        ],
        "type": "object",
        "properties": {
          "submissionIds": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "ListSubmissionAssignmentsResponse": {
        "type": "object",
        "properties": {
          "assignments": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSubmissionStatusInProgressRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateSubmissionStatusRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateSubmissionStatusDeclinedRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateSubmissionStatusRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateSubmissionStatusWithdrawnRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateSubmissionStatusRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateSubmissionStatusCompletedRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateSubmissionStatusRequest"
          }
        ],
        "additionalProperties": false
      },
      "UpdateSubmissionStatusRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "new",
              "in_progress",
              "accepted",
              "declined",
              "withdrawn",
              "completed",
              "editable",
              "viewed",
              "received",
              "published"
            ],
            "type": "string"
          },
          "internalNote": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "$ref": "#/components/schemas/CreateSubmissionMessageRequest"
          }
        },
        "additionalProperties": false
      },
      "UpdateSubmissionStatusAcceptedRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateSubmissionStatusRequest"
          }
        ],
        "properties": {
          "publicationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddNoteToSubmissionRequest": {
        "required": [
          "note",
          "noteVisibility"
        ],
        "type": "object",
        "properties": {
          "note": {
            "maxLength": 8000,
            "type": "string"
          },
          "noteVisibility": {
            "enum": [
              "team",
              "admins_only"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}